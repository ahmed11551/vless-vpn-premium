version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: vless-postgres
    environment:
      POSTGRES_DB: vless_vpn
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - vless-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: vless-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - vless-network

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: vless-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: vless_vpn
      DB_USER: postgres
      DB_PASSWORD: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 7d
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./server/uploads:/app/uploads
      - ./server/logs:/app/logs
    networks:
      - vless-network

  # Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: vless-frontend
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - vless-network

  # Telegram Bot
  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    container_name: vless-bot
    environment:
      TELEGRAM_BOT_TOKEN: your-telegram-bot-token
      API_BASE_URL: http://backend:3001/api
    depends_on:
      - backend
    networks:
      - vless-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: vless-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - vless-network

volumes:
  postgres_data:
  redis_data:

networks:
  vless-network:
    driver: bridge
